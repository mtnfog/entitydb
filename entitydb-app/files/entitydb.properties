# EntityDB configuration.

# EntityDB's stack consists of several applications which can be configured in this file.
# Those components are:
# 1. The EntityDB API.
# 2. The underlying entity store database.
# 3. The cache to improve performance.
# 4. The queue that holds holds entities received from the API.
# 5. The entity rules engine.
# 6. Elasticsearch for entity searching.

# Configuration for the user management.
# Users and groups are in users.properties when using the "internal" user manager.
user.manager=internal

# Configuration for the audit logger.
# Valid values for the logger are: "tempfile" and "fluentd"
audit.enabled=true
audit.logger=tempfile
audit.id=localhost

# The database that stores users, groups, and queries.
# Valid values are: mysql and internal
datastore=@datastore@

# Configuration for the MySQL datastore.
datastore.jdbc.url=
datastore.username=
datastore.password=

# The backend database to store the entities.
# Valid values are: mongodb, cassandra, dynamodb, mysql, internal
# "internal" should only be used for testing and evaluation.
# Configure the selected database in the appropriate section below.
entitystore=@entitystore@

# Configuration for a MongoDB backend database.
# Leave the username and password blank if they are not required.
mongodb.host=@mongodb.host@
mongodb.port=27017
mongodb.database=entitydb
mongodb.collection=entitydb
mongodb.username=
mongodb.password=

# Configuration for a Cassandra backend database.
cassandra.host=
cassandra.port=
cassandra.keyspace=

# Configuration for a DynamoDB backend database.
# Leave the accesskey and secretkey empty to use IAM role permissions.
dynamodb.endpoint=
dynamodb.table=
dynamodb.accesskey=
dynamodb.secretkey=

# Configuration for a MySQL backend database.
# To use MySQL you must have the MySQL Connector/J jar on EntityDB's classpath.
mysql.jdbc.url=
mysql.username=
mysql.password=

# Configuration for the cache.
# Valid values are: internal, memcached
# "internal" should only be used for testing and evaluation or when caching is not desired.
cache=internal

# Configuration for memcached.
# Separate hosts by commas, e.g.: host:port, host2:port
cache.memcached.hosts=

# The queue to store entities.
# Valid values are: internal, sqs, activemq
# "internal" should only be used for testing and evaluation.
queue.provider=@queue.provider@

# The number of seconds to sleep before checking the queue again when the queue is empty.
queue.consumer.sleep=5

# Configuration to use an AWS SQS queue.
# Leave the accesskey and secretkey empty to use IAM role permissions.
queue.sqs.queue.url=
queue.sqs.endpoint=https://sqs.us-east-1.amazonaws.com
queue.sqs.accesskey=
queue.sqs.secretkey=
queue.sqs.visibility.timeout=60

# Configuration to use an ActiveMQ queue.
queue.activemq.broker.url=vm://localhost?broker.persistent=true
queue.activemq.queue.name=entitydb
queue.activemq.timeout=100

# Configuration for the rules engine.
rules.engine.enabled=false
rules.directory=@rules.directory@

# Configuration for the search index.
# Valid valies are: internal, elasticsearch
search.index.provider=@search.index.provider@

# Configuration for Elasticsearch.
elasticsearch.host=http://localhost:9200/
elasticsearch.username=
elasticsearch.password=

# The search indexer.
indexer.enabled=true
indexer.batch.size=25

# Configuration for metrics.
# Valid values are: internal, influxdb
metrics.provider=internal

# Configuration for InfluxDB.
metrics.influxdb.endpoint=
metrics.influxdb.database=
metrics.influxdb.username=
metrics.influxdb.password=

# General configuration options.
mask.entity.acl=false
populate.test.data=true